#syntax=docker/dockerfile:1
FROM ruby:3.2.0-slim AS base

ARG NODE_VERSION=16.4.2

RUN mkdir /app
WORKDIR /app
RUN mkdir -p tmp/pids

RUN apt-get update && apt-get install -y --no-install-recommends curl gnupg2 && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list && \
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    curl -sL https://deb.nodesource.com/setup_16.x | bash - && \
    apt-get install -y --no-install-recommends nodejs yarn && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*


RUN apt-get update && apt-get install -y --no-install-recommends  postgresql-client-13 && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

RUN apt-get update && \
    apt-get install -y gnupg wget curl unzip --no-install-recommends && \
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
    echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list && \
    apt-get update -y && \
    apt-get install -y google-chrome-stable && \
    CHROMEVER=$(google-chrome --product-version | grep -o "[^\.]*\.[^\.]*\.[^\.]*") && \
    DRIVERVER=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROMEVER") && \
    wget -q --continue -P /chromedriver "http://chromedriver.storage.googleapis.com/$DRIVERVER/chromedriver_linux64.zip" && \
    unzip /chromedriver/chromedriver* -d /usr/local/bin/chromedriver

FROM base AS build-deps

RUN apt-get update && apt-get install -y --no-install-recommends git build-essential libpq-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*


FROM build-deps AS gems

RUN gem install bundler -v 2.3.11

COPY Gemfile Gemfile.lock ./

RUN bundle install &&  rm -rf vendor/bundle/ruby/*/cache

FROM base AS node_modules

COPY package.json yarn.lock ./

RUN yarn install --check-files

FROM base


COPY --from=gems /app /app
COPY --from=gems /usr/local/bundle /usr/local/bundle
COPY --from=node_modules /app/node_modules /app/node_modules
COPY . ./

RUN ["chmod", "+x", "scripts/ci/rspec.sh"]
