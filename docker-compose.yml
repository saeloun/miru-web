version: "3.9"
services:
  web:
    stdin_open: true # docker run -i
    tty: true        # docker run -t

    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/miru-app
    ports:
      - "3000:3000"
    environment:
    - RAILS_ENV=test
    - RACK_ENV=test
    - RAILS_SERVE_STATIC_FILES=true
    - DATABASE_URL=postgres://postgres:postgres@database:5432/
    - ELASTICSEARCH_URL=http://elasticsearch:9200
    - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true
    - RAILS_LOG_TO_STDOUT=true
    - SECRET_KEY_BASE=5dfb643fc0780d5829e15e8125dc291ca4fbf4b9332fb61c355941080293869b6d7ea1811e6fa4cb4ea9a064aaa3faeb26e18b707e2e6528667fa12f7e4fcbd8

    - AWS_ACCESS_KEY_ID=Replace
    - AWS_SECRET_ACCESS_ID=Replace
    - AWS_S3_BUCKET_NAME=Replace
    - AWS_REGION=us-east-1

  elasticsearch:
    image: elasticsearch:7.13.3
    environment:
      discovery.type: single-node
      network.host: 0.0.0.0
      xpack.security.enabled: false
    ports:
      - "9200:9200"

  database:
    image: postgres:13.8
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres

  redis:
    image: redis:6.2.7
    command: redis-server
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis:/data

volumes:
  gem_cache:
  postgres:
  node_modules:
  redis:
