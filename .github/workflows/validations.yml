name: CI Test Suite
on:
  push:
    branches: [develop, main]
  pull_request:
    types: [labeled, opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  tests:
    name: Running tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      fail-fast: false
      matrix:
        # Run tests in 4 parallel jobs
        ci_node_index: [0, 1, 2, 3]
        ci_node_total: [4]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          postgresql version: 16
          postgresql db: miru_web_test
          postgresql user: root
          postgresql password: "password"
      
      - name: Setup Chrome and ChromeDriver
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
          install-chromedriver: true
          install-dependencies: true
      
      - name: Start Xvfb
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'
          bundler-cache: true
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
      
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ~/.cache/puppeteer
            node_modules/.cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      
      - name: Install pnpm packages
        run: |
          PUPPETEER_SKIP_DOWNLOAD=true pnpm install --frozen-lockfile
      
      - name: Run Rubocop
        if: matrix.ci_node_index == 0
        run: bundle exec rubocop
      
      - name: Run ESLint
        if: matrix.ci_node_index == 0
        run: pnpm lint
      
      - name: Setup test database
        env:
          RAILS_ENV: test
          DB_HOST: localhost
          DB_USER: root
          DB_PASS: password
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load
          bundle exec rails db:migrate
      
      - name: Enable PostgreSQL extensions
        env:
          RAILS_ENV: test
          DB_HOST: localhost
          DB_USER: root
          DB_PASS: password
        run: |
          bundle exec rails runner "ActiveRecord::Base.connection.execute('CREATE EXTENSION IF NOT EXISTS pg_trgm')"
          bundle exec rails runner "ActiveRecord::Base.connection.execute('CREATE EXTENSION IF NOT EXISTS unaccent')"
      
      - name: Run parallel tests (excluding system specs)
        env:
          RAILS_ENV: test
          DB_HOST: localhost
          DB_USER: root
          DB_PASS: password
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          PARALLEL_TEST_PROCESSORS: 2
          CI: true
        run: |
          mkdir -p tmp
          NODE_GROUP=$((${CI_NODE_INDEX} + 1))
          # Run all specs in parallel (system specs are skipped via support file)
          bundle exec parallel_rspec spec \
            -o "--format progress --format RspecJunitFormatter --out tmp/rspec_${CI_NODE_INDEX}.xml" \
            --only-group ${NODE_GROUP}/${CI_NODE_TOTAL}
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.ci_node_index }}
          path: |
            tmp/rspec_*.xml
            tmp/rspec*.xml
          if-no-files-found: warn
      
      - name: Upload coverage reports
        if: matrix.ci_node_index == 0
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security-audit:
    name: Security audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'
          bundler-cache: true
      
      - name: Cache security tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.gem
            ~/.bundle
          key: ${{ runner.os }}-security-tools-${{ hashFiles('.ruby-version') }}
          restore-keys: |
            ${{ runner.os }}-security-tools-
      
      - name: Run bundler-audit
        run: |
          gem install bundler-audit
          bundle audit check --update
      
      - name: Run brakeman
        run: |
          gem install brakeman
          brakeman -q -w2