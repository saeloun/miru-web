name: Back up database
run-name: Backup database to R2

# every sunday
on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:
jobs:
  backup:
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_PRODUCTION_DB_TOKEN }}
      FLY_DB_APP: ${{ secrets.FLY_DB_APP_NAME }}
      PGUSER: postgres
      PGPASSWORD: ${{ secrets.PGPASSWORD }}
      PGDATABASE: miru_production
      PGHOST: localhost
      PGPORT: 5434
      R2_DB_BUCKET: db-backup

    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Set filename
        run: echo "filename=db-$(date -u +"%Y-%m-%d-%H%M%S").sql" >> $GITHUB_ENV
      - name: install pg_dump version 15.2
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null
          sudo apt-get update
          sudo apt-get install -y postgresql-client-15
          psql --version
      - name: Dump database and gzip
        run: |
          flyctl proxy $PGPORT:5432 -a $FLY_DB_APP &
          sleep 3
          echo Dumping ...
          PGPASSWORD=${PGPASSWORD} pg_dump -h $PGHOST -p $PGPORT -x -U $PGUSER -F c -b -v  -Z0 -f ${{ env.filename }} ${PGDATABASE}
          gzip ${{ env.filename }}
          mkdir -p backup
          mv ${{ env.filename }}.gz backup/
          ls -la backup/
      - name: Upload backup to R2
        uses: ryand56/r2-upload-action@latest
        with:
            r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
            r2-access-key-id: ${{ secrets.R2_ACCESS_KEY }}
            r2-secret-access-key: ${{ secrets.R2_SECRET_KEY }}
            r2-bucket: ${{ secrets.R2_DB_BUCKET }}
            source-dir: backup
            destination-dir: ./
