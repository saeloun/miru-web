name: Back up database
run-name: Task
on:
  push:
    branches:
      - automate-db-backup
# on:
#   schedule:
#     - cron: "0 0 * * 0"
#     # every sunday
  workflow_dispatch:
jobs:
  backup:
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      FLY_DB_APP: miru-staging-db
      PGUSER: postgres
      PGPASSWORD: ${{ secrets.PGSTAGINGPASSWORD }}
      PGDATABASE: miru-staging-db
      PGHOST: localhost
      PGPORT: 5434
      S3_BUCKET: miru-db-backup

    steps:
      - uses: s3-actions/s3cmd@v1.2.0
        with:
          provider: aws
          region: us-east-1
          access_key: ${{ secrets.S3_ACCESS_KEY }}
          secret_key: ${{ secrets.S3_SECRET_KEY }}
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Set filename
        run: echo "filename=db-$(date -u +"%Y-%m-%d-%H%M%S").sql" >> $GITHUB_ENV
      - name: install pg_dump version 15.2
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null
          sudo apt-get update
          sudo apt-get install -y postgresql-client-15
          psql --version
      - name: Dump database, gzip, and upload to S3
        run: |
          echo $FLY_DB_APP
          echo $S3_BUCKET
          flyctl apps list & sleep 3
          flyctl proxy $PGPORT:5432 -a $FLY_DB_APP &
          sleep 3
          echo Dumping ...
          pg_dump -v -h $PGHOST -p $PGPORT -U $PGUSER $PGDATABASE > ${{ env.filename }}
          gzip ${{ env.filename }}
          ls
          s3cmd put --acl-private ${{ env.filename }}.gz s3://$S3_BUCKET/${{ env.filename }}.gz
