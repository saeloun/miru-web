# frozen_string_literal: true

require "json"

begin
  file = File.open "coverage/.last_run.json"
  result_set = File.open "coverage/.resultset.json"

  summary = JSON.load file
  coverage_percent = summary["result"]["line"]

  result_summary = JSON.load result_set
  tested_files = result_summary["RSpec"]["coverage"]
  @coverage_missing_files =
    tested_files.select { |key, value| value["lines"].include?(0) && value["lines"].compact! }

  @file_coverage_percent = @coverage_missing_files.map do |file|
    total_lines = file[1]["lines"].count.to_f
    zero_count = file[1]["lines"].count(0)
    (((total_lines - zero_count) / total_lines) * 100).round(2)
  end

  def coverage_missing_files_percentage
    a = ""
    for i in 0..@coverage_missing_files.keys.count - 1
      a += "| #{@coverage_missing_files.keys[i].split('miru-web').last} |"\
            " #{@file_coverage_percent[i]} % |\n"
    end
    a
  end

  file.close
  result_set.close

  if coverage_percent == 100.0
    output = <<~MARKDOWN
      ### Current Code Coverage Percent of this PR:
      ## #{coverage_percent} %
    MARKDOWN
  else
    output = <<~MARKDOWN
      ### Current Code Coverage Percent of this PR:
      ## #{coverage_percent} %
      #### Files having coverage below 100%
      | Impacted Files       | Coverage                             |
      |----------------------|--------------------------------------|
      #{coverage_missing_files_percentage}
    MARKDOWN
  end

  File.write("code-coverage-comment.txt", output)

rescue StandardError
  output = <<~MARKDOWN
    # Unable to parse the codecoverage report generated by simpleCov!!
    Please make sure that `rspec` was run before pushing the code#{' '}
  MARKDOWN

  File.write("code-coverage-comment.txt", output)
end
