{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { NodePath, types as t } from '@babel/core'\n\ninterface State {\n  replacedComponents: Set<string>\n  unsupportedComponents: Set<string>\n}\n\nconst elementToComponent: { [key: string]: string } = {\n  svg: 'Svg',\n  circle: 'Circle',\n  clipPath: 'ClipPath',\n  ellipse: 'Ellipse',\n  g: 'G',\n  linearGradient: 'LinearGradient',\n  radialGradient: 'RadialGradient',\n  line: 'Line',\n  path: 'Path',\n  pattern: 'Pattern',\n  polygon: 'Polygon',\n  polyline: 'Polyline',\n  rect: 'Rect',\n  symbol: 'Symbol',\n  text: 'Text',\n  textPath: 'TextPath',\n  tspan: 'TSpan',\n  use: 'Use',\n  defs: 'Defs',\n  stop: 'Stop',\n  mask: 'Mask',\n  image: 'Image',\n  foreignObject: 'ForeignObject',\n}\n\nconst plugin = () => {\n  function replaceElement(path: NodePath<t.JSXElement>, state: State) {\n    const namePath = path.get('openingElement').get('name')\n    if (!namePath.isJSXIdentifier()) return\n    const { name } = namePath.node\n\n    // Replace element by react-native-svg components\n    const component = elementToComponent[name]\n\n    if (component) {\n      namePath.replaceWith(t.jsxIdentifier(component))\n      if (path.has('closingElement')) {\n        const closingNamePath = path\n          .get('closingElement')\n          .get('name') as NodePath<t.JSXIdentifier>\n        closingNamePath.replaceWith(t.jsxIdentifier(component))\n      }\n      state.replacedComponents.add(component)\n      return\n    }\n\n    // Remove element if not supported\n    state.unsupportedComponents.add(name)\n    path.remove()\n  }\n\n  const svgElementVisitor = {\n    JSXElement(path: NodePath<t.JSXElement>, state: State) {\n      if (\n        !path.get('openingElement').get('name').isJSXIdentifier({ name: 'svg' })\n      ) {\n        return\n      }\n\n      replaceElement(path, state)\n      path.traverse(jsxElementVisitor, state)\n    },\n  }\n\n  const jsxElementVisitor = {\n    JSXElement(path: NodePath<t.JSXElement>, state: State) {\n      replaceElement(path, state)\n    },\n  }\n\n  const importDeclarationVisitor = {\n    ImportDeclaration(path: NodePath<t.ImportDeclaration>, state: State) {\n      if (path.get('source').isStringLiteral({ value: 'react-native-svg' })) {\n        state.replacedComponents.forEach((component) => {\n          if (\n            path\n              .get('specifiers')\n              .some((specifier) =>\n                specifier.get('local').isIdentifier({ name: component }),\n              )\n          ) {\n            return\n          }\n\n          path.pushContainer(\n            'specifiers',\n            t.importSpecifier(t.identifier(component), t.identifier(component)),\n          )\n        })\n      } else if (path.get('source').isStringLiteral({ value: 'expo' })) {\n        path.pushContainer(\n          'specifiers',\n          t.importSpecifier(t.identifier('Svg'), t.identifier('Svg')),\n        )\n      } else {\n        return\n      }\n\n      if (state.unsupportedComponents.size && !path.has('trailingComments')) {\n        const componentList = [...state.unsupportedComponents].join(', ')\n        path.addComment(\n          'trailing',\n          ` SVGR has dropped some elements not supported by react-native-svg: ${componentList} `,\n        )\n      }\n    },\n  }\n\n  return {\n    visitor: {\n      Program(path: NodePath<t.Program>, state: Partial<State>) {\n        state.replacedComponents = new Set()\n        state.unsupportedComponents = new Set()\n\n        path.traverse(svgElementVisitor, state as State)\n        path.traverse(importDeclarationVisitor, state as State)\n      },\n    },\n  }\n}\n\nexport default plugin\n"],"names":["t"],"mappings":"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"}