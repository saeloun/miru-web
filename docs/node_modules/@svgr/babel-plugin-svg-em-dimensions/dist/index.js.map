{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { types as t, NodePath, ConfigAPI } from '@babel/core'\n\nconst elements = ['svg', 'Svg']\n\nexport interface Options {\n  width: number | string\n  height: number | string\n}\n\nconst getValue = (raw: undefined | number | string) => {\n  if (raw === undefined) return t.stringLiteral('1em')\n  switch (typeof raw) {\n    case 'number':\n      return t.jsxExpressionContainer(t.numericLiteral(raw))\n    case 'string':\n      return t.stringLiteral(raw)\n    default:\n      return t.stringLiteral('1em')\n  }\n}\n\nconst plugin = (_: ConfigAPI, opts: Options) => ({\n  visitor: {\n    JSXOpeningElement(path: NodePath<t.JSXOpeningElement>) {\n      if (\n        !elements.some((element) =>\n          path.get('name').isJSXIdentifier({ name: element }),\n        )\n      )\n        return\n\n      const values = {\n        width: getValue(opts.width),\n        height: getValue(opts.height),\n      }\n      const requiredAttributes = Object.keys(values)\n\n      path.get('attributes').forEach((attributePath) => {\n        if (!attributePath.isJSXAttribute()) return\n        const namePath = attributePath.get('name')\n        if (!namePath.isJSXIdentifier()) return\n        const index = requiredAttributes.indexOf(namePath.node.name)\n\n        if (index === -1) return\n\n        const valuePath = attributePath.get('value')\n        valuePath.replaceWith(values[namePath.node.name as 'width' | 'height'])\n        requiredAttributes.splice(index, 1)\n      })\n\n      path.pushContainer(\n        'attributes',\n        requiredAttributes.map((attr) =>\n          t.jsxAttribute(\n            t.jsxIdentifier(attr),\n            values[attr as 'width' | 'height'],\n          ),\n        ),\n      )\n    },\n  },\n})\n\nexport default plugin\n"],"names":["t"],"mappings":";;;;AACA,MAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAChC,MAAM,QAAQ,GAAG,CAAC,GAAG,KAAK;AAC1B,EAAE,IAAI,GAAG,KAAK,KAAK,CAAC;AACpB,IAAI,OAAOA,UAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAClC,EAAE,QAAQ,OAAO,GAAG;AACpB,IAAI,KAAK,QAAQ;AACjB,MAAM,OAAOA,UAAC,CAAC,sBAAsB,CAACA,UAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7D,IAAI,KAAK,QAAQ;AACjB,MAAM,OAAOA,UAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAClC,IAAI;AACJ,MAAM,OAAOA,UAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACpC,GAAG;AACH,CAAC,CAAC;AACG,MAAC,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM;AAC7B,EAAE,OAAO,EAAE;AACX,IAAI,iBAAiB,CAAC,IAAI,EAAE;AAC5B,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;AAC1F,QAAQ,OAAO;AACf,MAAM,MAAM,MAAM,GAAG;AACrB,QAAQ,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AACnC,QAAQ,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACrC,OAAO,CAAC;AACR,MAAM,MAAM,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrD,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,KAAK;AACxD,QAAQ,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE;AAC3C,UAAU,OAAO;AACjB,QAAQ,MAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACnD,QAAQ,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;AACvC,UAAU,OAAO;AACjB,QAAQ,MAAM,KAAK,GAAG,kBAAkB,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrE,QAAQ,IAAI,KAAK,KAAK,CAAC,CAAC;AACxB,UAAU,OAAO;AACjB,QAAQ,MAAM,SAAS,GAAG,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrD,QAAQ,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1D,QAAQ,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5C,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,kBAAkB,CAAC,GAAG,CAAC,CAAC,IAAI,KAAKA,UAAC,CAAC,YAAY,CAACA,UAAC,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9H,KAAK;AACL,GAAG;AACH,CAAC;;;;"}