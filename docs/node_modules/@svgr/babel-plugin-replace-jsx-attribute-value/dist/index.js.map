{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ConfigAPI, types as t, NodePath, template } from '@babel/core'\n\nexport interface Value {\n  value: string\n  newValue: string | boolean | number\n  literal?: boolean\n}\n\nexport interface Options {\n  values: Value[]\n}\n\nconst addJSXAttribute = (api: ConfigAPI, opts: Options) => {\n  const getAttributeValue = (\n    value: string | boolean | number,\n    literal?: boolean,\n  ) => {\n    if (typeof value === 'string' && literal) {\n      return t.jsxExpressionContainer(\n        (template.ast(value) as t.ExpressionStatement).expression,\n      )\n    }\n\n    if (typeof value === 'string') {\n      return t.stringLiteral(value)\n    }\n\n    if (typeof value === 'boolean') {\n      return t.jsxExpressionContainer(t.booleanLiteral(value))\n    }\n\n    if (typeof value === 'number') {\n      return t.jsxExpressionContainer(t.numericLiteral(value))\n    }\n\n    return null\n  }\n\n  return {\n    visitor: {\n      JSXAttribute(path: NodePath<t.JSXAttribute>) {\n        const valuePath = path.get('value')\n        if (!valuePath.isStringLiteral()) return\n\n        opts.values.forEach(({ value, newValue, literal }) => {\n          if (!valuePath.isStringLiteral({ value })) return\n          const attributeValue = getAttributeValue(newValue, literal)\n          if (attributeValue) {\n            valuePath.replaceWith(attributeValue)\n          }\n        })\n      },\n    },\n  }\n}\n\nexport default addJSXAttribute\n"],"names":["t","template"],"mappings":";;;;AACK,MAAC,eAAe,GAAG,CAAC,GAAG,EAAE,IAAI,KAAK;AACvC,EAAE,MAAM,iBAAiB,GAAG,CAAC,KAAK,EAAE,OAAO,KAAK;AAChD,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,EAAE;AAC9C,MAAM,OAAOA,UAAC,CAAC,sBAAsB,CAACC,aAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC;AACtE,KAAK;AACL,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACnC,MAAM,OAAOD,UAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACpC,KAAK;AACL,IAAI,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;AACpC,MAAM,OAAOA,UAAC,CAAC,sBAAsB,CAACA,UAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/D,KAAK;AACL,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACnC,MAAM,OAAOA,UAAC,CAAC,sBAAsB,CAACA,UAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/D,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC;AACJ,EAAE,OAAO;AACT,IAAI,OAAO,EAAE;AACb,MAAM,YAAY,CAAC,IAAI,EAAE;AACzB,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC5C,QAAQ,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE;AACxC,UAAU,OAAO;AACjB,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK;AAC9D,UAAU,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,CAAC;AACnD,YAAY,OAAO;AACnB,UAAU,MAAM,cAAc,GAAG,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACtE,UAAU,IAAI,cAAc,EAAE;AAC9B,YAAY,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AAClD,WAAW;AACX,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK;AACL,GAAG,CAAC;AACJ;;;;"}