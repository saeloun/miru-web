{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ConfigAPI, types as t, NodePath, template } from '@babel/core'\n\nexport interface Attribute {\n  name: string\n  value?: boolean | number | string | null\n  spread?: boolean\n  literal?: boolean\n  position?: 'start' | 'end'\n}\n\nexport interface Options {\n  elements: string[]\n  attributes: Attribute[]\n}\n\nconst positionMethod = {\n  start: 'unshiftContainer',\n  end: 'pushContainer',\n} as const\n\nconst addJSXAttribute = (_: ConfigAPI, opts: Options) => {\n  function getAttributeValue({\n    literal,\n    value,\n  }: {\n    literal?: Attribute['literal']\n    value: Attribute['value']\n  }) {\n    if (typeof value === 'boolean') {\n      return t.jsxExpressionContainer(t.booleanLiteral(value))\n    }\n\n    if (typeof value === 'number') {\n      return t.jsxExpressionContainer(t.numericLiteral(value))\n    }\n\n    if (typeof value === 'string' && literal) {\n      return t.jsxExpressionContainer(\n        (template.ast(value) as t.ExpressionStatement).expression,\n      )\n    }\n\n    if (typeof value === 'string') {\n      return t.stringLiteral(value)\n    }\n\n    return null\n  }\n\n  function getAttribute({ spread, name, value, literal }: Attribute) {\n    if (spread) {\n      return t.jsxSpreadAttribute(t.identifier(name))\n    }\n\n    return t.jsxAttribute(\n      t.jsxIdentifier(name),\n      getAttributeValue({ value, literal }),\n    )\n  }\n\n  return {\n    visitor: {\n      JSXOpeningElement(path: NodePath<t.JSXOpeningElement>) {\n        if (!t.isJSXIdentifier(path.node.name)) return\n        if (!opts.elements.includes(path.node.name.name)) return\n\n        opts.attributes.forEach(\n          ({\n            name,\n            value = null,\n            spread = false,\n            literal = false,\n            position = 'end',\n          }) => {\n            const method = positionMethod[position]\n            const newAttribute = getAttribute({ spread, name, value, literal })\n            const attributes = path.get('attributes')\n\n            const isEqualAttribute = (\n              attribute: NodePath<t.JSXSpreadAttribute | t.JSXAttribute>,\n            ) => {\n              if (spread)\n                return (\n                  attribute.isJSXSpreadAttribute() &&\n                  attribute.get('argument').isIdentifier({ name })\n                )\n              return (\n                attribute.isJSXAttribute() &&\n                attribute.get('name').isJSXIdentifier({ name })\n              )\n            }\n\n            const replaced = attributes.some((attribute) => {\n              if (!isEqualAttribute(attribute)) return false\n              attribute.replaceWith(newAttribute)\n              return true\n            })\n\n            if (!replaced) {\n              path[method]('attributes', newAttribute)\n            }\n          },\n        )\n      },\n    },\n  }\n}\n\nexport default addJSXAttribute\n"],"names":["t","template"],"mappings":"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"}