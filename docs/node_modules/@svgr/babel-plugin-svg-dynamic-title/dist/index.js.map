{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { NodePath, types as t } from '@babel/core'\n\nconst elements = ['svg', 'Svg']\n\ntype tag = 'title' | 'desc'\n\nexport interface Options {\n  tag: tag | null\n}\n\ninterface State {\n  opts: Options\n}\n\nconst createTagElement = (\n  tag: tag,\n  children: t.JSXExpressionContainer[] = [],\n  attributes: (t.JSXAttribute | t.JSXSpreadAttribute)[] = [],\n) => {\n  const eleName = t.jsxIdentifier(tag)\n  return t.jsxElement(\n    t.jsxOpeningElement(eleName, attributes),\n    t.jsxClosingElement(eleName),\n    children,\n  )\n}\n\nconst createTagIdAttribute = (tag: tag) =>\n  t.jsxAttribute(\n    t.jsxIdentifier('id'),\n    t.jsxExpressionContainer(t.identifier(`${tag}Id`)),\n  )\n\nconst addTagIdAttribute = (\n  tag: tag,\n  attributes: (t.JSXAttribute | t.JSXSpreadAttribute)[],\n) => {\n  const existingId = attributes.find(\n    (attribute) => t.isJSXAttribute(attribute) && attribute.name.name === 'id',\n  ) as t.JSXAttribute | undefined\n\n  if (!existingId) {\n    return [...attributes, createTagIdAttribute(tag)]\n  }\n  existingId.value = t.jsxExpressionContainer(\n    t.isStringLiteral(existingId.value)\n      ? t.logicalExpression('||', t.identifier(`${tag}Id`), existingId.value)\n      : t.identifier(`${tag}Id`),\n  )\n  return attributes\n}\n\nconst plugin = () => ({\n  visitor: {\n    JSXElement(path: NodePath<t.JSXElement>, state: State) {\n      const tag = state.opts.tag || 'title'\n      if (!elements.length) return\n\n      const openingElement = path.get('openingElement')\n      const openingElementName = openingElement.get('name')\n      if (\n        !elements.some((element) =>\n          openingElementName.isJSXIdentifier({ name: element }),\n        )\n      ) {\n        return\n      }\n\n      const getTagElement = (\n        existingTitle?: t.JSXElement,\n      ): t.JSXExpressionContainer => {\n        const tagExpression = t.identifier(tag)\n        if (existingTitle) {\n          existingTitle.openingElement.attributes = addTagIdAttribute(\n            tag,\n            existingTitle.openingElement.attributes,\n          )\n        }\n        const conditionalTitle = t.conditionalExpression(\n          tagExpression,\n          createTagElement(\n            tag,\n            [t.jsxExpressionContainer(tagExpression)],\n            existingTitle\n              ? existingTitle.openingElement.attributes\n              : [createTagIdAttribute(tag)],\n          ),\n          t.nullLiteral(),\n        )\n        if (existingTitle?.children?.length) {\n          // If title already exists render as follows\n          // `{title === undefined ? fallbackTitleElement : titleElement}`\n          return t.jsxExpressionContainer(\n            t.conditionalExpression(\n              t.binaryExpression(\n                '===',\n                tagExpression,\n                t.identifier('undefined'),\n              ),\n              existingTitle,\n              conditionalTitle,\n            ),\n          )\n        }\n        return t.jsxExpressionContainer(conditionalTitle)\n      }\n\n      // store the title element\n      let tagElement: t.JSXExpressionContainer | null = null\n\n      const hasTitle = path.get('children').some((childPath) => {\n        if (childPath.node === tagElement) return false\n        if (!childPath.isJSXElement()) return false\n        const name = childPath.get('openingElement').get('name')\n        if (!name.isJSXIdentifier()) return false\n        if (name.node.name !== tag) return false\n        tagElement = getTagElement(childPath.node)\n        childPath.replaceWith(tagElement)\n        return true\n      })\n\n      // create a title element if not already create\n      tagElement = tagElement || getTagElement()\n      if (!hasTitle) {\n        // path.unshiftContainer is not working well :(\n        // path.unshiftContainer('children', titleElement)\n        path.node.children.unshift(tagElement)\n        path.replaceWith(path.node)\n      }\n    },\n  },\n})\n\nexport default plugin\n"],"names":["t"],"mappings":"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"}